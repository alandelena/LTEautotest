import visa
import sys

def mountFilename(testname,param,value,extension):
    """ Mount the filename testname_parameter_value.extension """
    return str(testname+"_"+param+"_"+value+"_"+extension)

def runTest(osc,filename):
    print "\n\t -- Running test for %s" % filename
    osc_commandlist = []
    _ = "MMEM:EXP:DLOG \"external:\\" + filename + "\""
    osc_commandlist.append(_)
    osc_commandlist.append("SENSe:eLOG:TIME 10")
    osc_commandlist.append("INIT:eLOG (@1)")

    for x in osc_commandlist:
        queryReturn = osc.query(x)
        print "Command: %s"
        print "Return : %s" % queryReturn
        print ""


def addNewTest(cmw_testlist, test, testname, param, value):
    filename = mountFilename(testname, param, value, ".csv")
    cmw_testlist[0] = test
    cmw_testlist[1] = filename

def setTest(cmw, test):
    print "Setting test %s" % test
    qrret = cmw.query(test)
    print "Return : %s" % qrret



cmwByIP = "TCPIP0::172.17.70.226::inst0::INSTR"
oscByIP = "TCPIP0::172.17.60.237::inst0::INSTR"
    
rm = visa.ResourceManager('@py')

cmw = rm.get_instrument(cmwByIP)
osc = rm.get_instrument(oscByIP)

cmw_testlist = [[],[]]
osc_commandlist = []

# i = 0
# while i < 6:
#     try:
#         print("  Trying to reach the CMW - #%i" % i)
#         cmw.timeout = 5000
#         queryReturn = cmw.query('SYST:ERR:ALL?')
#         print "Query return: %s" % queryReturn
#         break
#     except:
#         print("\tCannot reach the equipment")
#         i+=1
#         if i > 5:
#             print("\n\tCheck the communication")
#             sys.exit(2)            
# print "\n\t -- CMW OK!"

i = 0
while i < 6:
    try:
        print("  Trying to reach the OSC - #%i" % i)
        osc.timeout = 5000
        queryReturn = osc.query('SYSTem:ERRor?')
        print "Query return: %s" % queryReturn
        break
    except:
        print("\tCannot reach the equipment")
        i+=1
        if i > 5:
            print("\n\tCheck the communication")
            sys.exit(2)

print "\n\t -- OSC OK!"


#Set tests
addNewTest(cmw_testlist, "CONF:LTE:SIGN:CONN:PCC:UDTT:UL1:ALL 50,0,50,0,50,0,50,0,50,0,0,0,0,0,0,0,0,0,0,00,Q64,Q64,Q64,Q64,Q64,Q64,Q64,Q64,Q64,Q64,26,26,26,26,26,26,26,26,26,26", "alternated_prb","distance_prb","1" )

addNewTest(cmw_testlist, "CONF:LTE:SIGN:CONN:PCC:UDTT:UL1:ALL 50,0,0,50,0,0,50,0,0,50,0,0,0,0,0,0,0,0,0,0,Q64,Q64,Q64,Q64,Q64,Q64,Q64,Q64,Q64,Q64,26,26,26,26,26,26,26,26,26,26", "alternated_prb","distance_prb","2" )

#End_of_testsetting
#Main Loop
for i in range(len(cmw_testlist[0])):
    setTest(cmw, cmw_testlist[0][i])
 #   runTest(osc, cmw_testlist[1][i])


# for x in cmw_testlist:
#     queryReturn = cmw.query(x)
#     print "Command: %s" % x
#     print "Return : %s" % queryReturn
#     print ""


